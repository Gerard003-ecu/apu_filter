================================================================= test session starts ==================================================================
platform darwin -- Python 3.12.3, pytest-8.4.2, pluggy-1.6.0 -- /Users/gerardomayor/Documents/estru_techos/apu_filter/.venv/bin/python3
cachedir: .pytest_cache
rootdir: /Users/gerardomayor/Documents/estru_techos/apu_filter
configfile: pyproject.toml
collected 37 items

tests/test_app.py::TestAppEndpoints::test_get_estimate_with_session FAILED                                                                       [  2%]
tests/test_data_validator.py::TestDataValidator::test_validate_and_clean_data_integration PASSED                                                 [  5%]
tests/test_data_validator.py::TestDataValidator::test_validate_extreme_costs PASSED                                                              [  8%]
tests/test_data_validator.py::TestDataValidator::test_validate_missing_descriptions PASSED                                                       [ 10%]
tests/test_data_validator.py::TestDataValidator::test_validate_zero_quantity_with_cost PASSED                                                    [ 13%]
tests/test_estimator.py::TestEstimator::test_calculate_estimate_flexible_search FAILED                                                           [ 16%]
tests/test_estimator.py::TestEstimator::test_calculate_estimate_logic_two_step FAILED                                                            [ 18%]
tests/test_models.py::TestProbabilityModels::test_sanitize_value PASSED                                                                          [ 21%]
tests/test_models.py::TestProbabilityModels::test_simulation_handles_empty_input PASSED                                                          [ 24%]
tests/test_models.py::TestProbabilityModels::test_simulation_handles_missing_columns PASSED                                                      [ 27%]
tests/test_models.py::TestProbabilityModels::test_simulation_handles_zero_cost_input PASSED                                                      [ 29%]
tests/test_models.py::TestProbabilityModels::test_simulation_returns_correct_structure PASSED                                                    [ 32%]
tests/test_models.py::TestProbabilityModels::test_simulation_values_are_reasonable PASSED                                                        [ 35%]
tests/test_procesador_csv.py::TestCSVProcessor::test_abnormally_high_cost_triggers_error PASSED                                                  [ 37%]
tests/test_procesador_csv.py::TestCSVProcessor::test_cartesian_explosion_on_final_merge PASSED                                                   [ 40%]
tests/test_procesador_csv.py::TestCSVProcessor::test_duplicate_codigo_apu_in_presupuesto PASSED                                                  [ 43%]
tests/test_procesador_csv.py::TestCSVProcessor::test_duplicate_insumos_keeps_higher_price PASSED                                                 [ 45%]
tests/test_procesador_csv.py::TestCSVProcessor::test_process_all_files_structure_and_calculations PASSED                                         [ 48%]
tests/test_report_parser.py::TestNewReportParser::test_apu_classification_depends_on_categories PASSED                                           [ 51%]
tests/test_report_parser.py::TestNewReportParser::test_apu_code_cleaning PASSED                                                                  [ 54%]
tests/test_report_parser.py::TestNewReportParser::test_basic_parsing_and_context_detection PASSED                                                [ 56%]
tests/test_report_parser.py::TestNewReportParser::test_category_detection_before_insumos PASSED                                                  [ 59%]
tests/test_report_parser.py::TestNewReportParser::test_category_detection_variations PASSED                                                      [ 62%]
tests/test_report_parser.py::TestNewReportParser::test_discard_insumo_with_zero_values PASSED                                                    [ 64%]
tests/test_report_parser.py::TestNewReportParser::test_encoding_handling PASSED                                                                  [ 67%]
tests/test_report_parser.py::TestNewReportParser::test_error_handling PASSED                                                                     [ 70%]
tests/test_report_parser.py::TestNewReportParser::test_fallback_parsing_mechanism PASSED                                                         [ 72%]
tests/test_report_parser.py::TestNewReportParser::test_ignore_garbage_lines PASSED                                                               [ 75%]
tests/test_report_parser.py::TestNewReportParser::test_mano_de_obra_compleja_logic PASSED                                                        [ 78%]
tests/test_report_parser.py::TestNewReportParser::test_mano_de_obra_simple_logic PASSED                                                          [ 81%]
tests/test_report_parser.py::TestNewReportParser::test_mo_detection_by_keywords PASSED                                                           [ 83%]
tests/test_report_parser.py::TestNewReportParser::test_multiple_apus_parsing PASSED                                                              [ 86%]
tests/test_report_parser.py::TestNewReportParser::test_prevent_data_contamination PASSED                                                         [ 89%]
tests/test_report_parser.py::TestNewReportParser::test_stats_tracking PASSED                                                                     [ 91%]
tests/test_report_parser_issue.py::TestReportParserWithRealData::test_dataframe_is_not_empty_with_real_data PASSED                               [ 94%]
tests/test_report_parser_issue.py::TestReportParserWithRealData::test_finds_a_significant_number_of_apus PASSED                                  [ 97%]
tests/test_report_parser_issue.py::TestReportParserWithRealData::test_specific_insumo_is_parsed_correctly PASSED                                 [100%]

======================================================================= FAILURES =======================================================================
___________________________________________________ TestAppEndpoints.test_get_estimate_with_session ____________________________________________________

self = <test_app.TestAppEndpoints testMethod=test_get_estimate_with_session>

    def test_get_estimate_with_session(self):
        with self.client as c:
            data = {
                "presupuesto": self._get_test_file("presupuesto.csv", PRESUPUESTO_DATA),
                "apus": self._get_test_file("apus.csv", APUS_DATA),
                "insumos": self._get_test_file("insumos.csv", INSUMOS_DATA),
            }
            # Set the app config directly for the test
            c.application.config["APP_CONFIG"] = TEST_CONFIG
            c.post("/upload", data=data, content_type="multipart/form-data")

            # Usa los nuevos parámetros que incluyen la cuadrilla
            estimate_params = {"material": "TST", "cuadrilla": "4"}
            response = c.post("/api/estimate", json=estimate_params)
            self.assertEqual(response.status_code, 200)
            json_data = json.loads(response.data)

            # Los valores esperados deben coincidir con el cálculo en test_estimator
            self.assertAlmostEqual(json_data["valor_suministro"], 0.0)
>           self.assertAlmostEqual(json_data["valor_instalacion"], 25000)
E           AssertionError: 0.0 != 25000 within 7 places (25000.0 difference)

tests/test_app.py:63: AssertionError
________________________________________________ TestEstimator.test_calculate_estimate_flexible_search _________________________________________________

self = <test_estimator.TestEstimator testMethod=test_calculate_estimate_flexible_search>

    def test_calculate_estimate_flexible_search(self):
        """
        Tests the flexible search logic and validates the final calculated value.
        """
        data_store = process_all_files(
            self.presupuesto_path, self.apus_path, self.insumos_path, config=TEST_CONFIG
        )

        params = {"material": "CUBIERTA", "cuadrilla": "5"}
        result = calculate_estimate(params, data_store, TEST_CONFIG)

        self.assertNotIn("error", result)
        self.assertNotIn("No se encontró APU de tarea", result["log"])

        # --- INICIO DE LA CORRECCIÓN ---
        # Verificar el resultado numérico, que es más robusto que verificar el log.
        # El log muestra que el resultado final es 31250.0
>       self.assertAlmostEqual(result["valor_construccion"], 31250.0, places=2)
E       AssertionError: 0.0 != 31250.0 within 2 places (31250.0 difference)

tests/test_estimator.py:109: AssertionError
_________________________________________________ TestEstimator.test_calculate_estimate_logic_two_step _________________________________________________

self = <test_estimator.TestEstimator testMethod=test_calculate_estimate_logic_two_step>

    def test_calculate_estimate_logic_two_step(self):
        """
        Tests the refactored calculate_estimate function with the new two-step search logic.
        """
        data_store = process_all_files(
            self.presupuesto_path, self.apus_path, self.insumos_path, config=TEST_CONFIG
        )

        # 1. Caso de prueba principal con la nueva lógica
        params = {"material": "TST", "cuadrilla": "4"}
        result = calculate_estimate(params, data_store, TEST_CONFIG)

        self.assertNotIn("error", result)

        # Verificar que se encontraron los APUs correctos
        self.assertIn("Suministro: No encontrado", result["apu_encontrado"])
>       self.assertIn("Tarea: INSTALACION TEJA SENCILLA CUBIERTA", result["apu_encontrado"])
E       AssertionError: 'Tarea: INSTALACION TEJA SENCILLA CUBIERTA' not found in 'Suministro: No encontrado | Tarea: No encontrado | Cuadrilla: No encontrada'

tests/test_estimator.py:55: AssertionError
=============================================================== short test summary info ================================================================
FAILED tests/test_app.py::TestAppEndpoints::test_get_estimate_with_session - AssertionError: 0.0 != 25000 within 7 places (25000.0 difference)
FAILED tests/test_estimator.py::TestEstimator::test_calculate_estimate_flexible_search - AssertionError: 0.0 != 31250.0 within 2 places (31250.0 difference)
FAILED tests/test_estimator.py::TestEstimator::test_calculate_estimate_logic_two_step - AssertionError: 'Tarea: INSTALACION TEJA SENCILLA CUBIERTA' not found in 'Suministro: No encontrado | Tarea: No encontrado | Cuadrilla: No encontrada'
============================================================ 3 failed, 34 passed in 17.49s =============================================================