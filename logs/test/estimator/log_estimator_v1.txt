================================================================= test session starts ==================================================================
platform darwin -- Python 3.12.3, pytest-8.4.2, pluggy-1.6.0 -- /Users/gerardomayor/Documents/estru_techos/apu_filter/.venv/bin/python3
cachedir: .pytest_cache
rootdir: /Users/gerardomayor/Documents/estru_techos/apu_filter
configfile: pyproject.toml
collected 37 items

tests/test_app.py::TestAppEndpoints::test_get_estimate_with_session PASSED                                                                       [  2%]
tests/test_data_validator.py::TestDataValidator::test_validate_and_clean_data_integration PASSED                                                 [  5%]
tests/test_data_validator.py::TestDataValidator::test_validate_extreme_costs PASSED                                                              [  8%]
tests/test_data_validator.py::TestDataValidator::test_validate_missing_descriptions PASSED                                                       [ 10%]
tests/test_data_validator.py::TestDataValidator::test_validate_zero_quantity_with_cost PASSED                                                    [ 13%]
tests/test_estimator.py::TestEstimator::test_calculate_estimate_flexible_search FAILED                                                           [ 16%]
tests/test_estimator.py::TestEstimator::test_calculate_estimate_logic_two_step PASSED                                                            [ 18%]
tests/test_models.py::TestProbabilityModels::test_sanitize_value PASSED                                                                          [ 21%]
tests/test_models.py::TestProbabilityModels::test_simulation_handles_empty_input PASSED                                                          [ 24%]
tests/test_models.py::TestProbabilityModels::test_simulation_handles_missing_columns PASSED                                                      [ 27%]
tests/test_models.py::TestProbabilityModels::test_simulation_handles_zero_cost_input PASSED                                                      [ 29%]
tests/test_models.py::TestProbabilityModels::test_simulation_returns_correct_structure PASSED                                                    [ 32%]
tests/test_models.py::TestProbabilityModels::test_simulation_values_are_reasonable PASSED                                                        [ 35%]
tests/test_procesador_csv.py::TestCSVProcessor::test_abnormally_high_cost_triggers_error PASSED                                                  [ 37%]
tests/test_procesador_csv.py::TestCSVProcessor::test_cartesian_explosion_on_final_merge PASSED                                                   [ 40%]
tests/test_procesador_csv.py::TestCSVProcessor::test_duplicate_codigo_apu_in_presupuesto PASSED                                                  [ 43%]
tests/test_procesador_csv.py::TestCSVProcessor::test_duplicate_insumos_keeps_higher_price PASSED                                                 [ 45%]
tests/test_procesador_csv.py::TestCSVProcessor::test_process_all_files_structure_and_calculations PASSED                                         [ 48%]
tests/test_report_parser.py::TestNewReportParser::test_apu_classification_depends_on_categories PASSED                                           [ 51%]
tests/test_report_parser.py::TestNewReportParser::test_apu_code_cleaning PASSED                                                                  [ 54%]
tests/test_report_parser.py::TestNewReportParser::test_basic_parsing_and_context_detection PASSED                                                [ 56%]
tests/test_report_parser.py::TestNewReportParser::test_category_detection_before_insumos PASSED                                                  [ 59%]
tests/test_report_parser.py::TestNewReportParser::test_category_detection_variations PASSED                                                      [ 62%]
tests/test_report_parser.py::TestNewReportParser::test_discard_insumo_with_zero_values PASSED                                                    [ 64%]
tests/test_report_parser.py::TestNewReportParser::test_encoding_handling PASSED                                                                  [ 67%]
tests/test_report_parser.py::TestNewReportParser::test_error_handling PASSED                                                                     [ 70%]
tests/test_report_parser.py::TestNewReportParser::test_fallback_parsing_mechanism PASSED                                                         [ 72%]
tests/test_report_parser.py::TestNewReportParser::test_ignore_garbage_lines PASSED                                                               [ 75%]
tests/test_report_parser.py::TestNewReportParser::test_mano_de_obra_compleja_logic PASSED                                                        [ 78%]
tests/test_report_parser.py::TestNewReportParser::test_mano_de_obra_simple_logic PASSED                                                          [ 81%]
tests/test_report_parser.py::TestNewReportParser::test_mo_detection_by_keywords PASSED                                                           [ 83%]
tests/test_report_parser.py::TestNewReportParser::test_multiple_apus_parsing PASSED                                                              [ 86%]
tests/test_report_parser.py::TestNewReportParser::test_prevent_data_contamination PASSED                                                         [ 89%]
tests/test_report_parser.py::TestNewReportParser::test_stats_tracking PASSED                                                                     [ 91%]
tests/test_report_parser_issue.py::TestReportParserWithRealData::test_dataframe_is_not_empty_with_real_data PASSED                               [ 94%]
tests/test_report_parser_issue.py::TestReportParserWithRealData::test_finds_a_significant_number_of_apus PASSED                                  [ 97%]
tests/test_report_parser_issue.py::TestReportParserWithRealData::test_specific_insumo_is_parsed_correctly PASSED                                 [100%]

======================================================================= FAILURES =======================================================================
________________________________________________ TestEstimator.test_calculate_estimate_flexible_search _________________________________________________

self = <test_estimator.TestEstimator testMethod=test_calculate_estimate_flexible_search>

    def test_calculate_estimate_flexible_search(self):
        """
        Tests the flexible search logic for a case that would otherwise fail.
        """
        data_store = process_all_files(
            self.presupuesto_path, self.apus_path, self.insumos_path, config=TEST_CONFIG
        )

        # Caso que fallaba: "CUBIERTA" no coincide 100% con "INSTALACION TEJA SENCILLA CUBIERTA"
        # Con la nueva lógica de puntuación, debería encontrarlo.
        params = {"material": "CUBIERTA", "cuadrilla": "5"}
        result = calculate_estimate(params, data_store, TEST_CONFIG)

        self.assertNotIn("error", result)
        self.assertNotIn("No se encontró APU de tarea", result["log"])

        # Verificar que la búsqueda flexible encontró el APU de tarea correcto
>       self.assertIn("Mejor coincidencia FLEXIBLE", result["log"])
E       AssertionError: 'Mejor coincidencia FLEXIBLE' not found in "📝 Parámetros de entrada: {'material': 'CUBIERTA', 'cuadrilla': '5'}\n🔄 Material mapeado: 'CUBIERTA' → 'CUBIERTA'\n\n============================================================\n🔍 BÚSQUEDA DE SUMINISTRO\n============================================================\n  --> Pool vacío o sin keywords, retornando None.\n\n⚠️ No se encontró APU de suministro.\n\n============================================================\n🔧 CÁLCULO DE INSTALACIÓN\n============================================================\n\n📍 Paso A: Costo Diario de Cuadrilla\n----------------------------------------\n--- INICIO DEPURACIÓN DETALLADA DE BÚSQUEDA ---\nBuscando con keywords: ['cuadrilla', 'de', '5']\n  - Modo: ESTRICTO\n  - APUs en pool: 2\n  - Primeras 5 descripciones en el pool:\n    - CUADRILLA DE 4\n    - CUADRILLA DE 5\n  - Candidato: 'cuadrilla de 4' -> Coincidencias: 2/3 (66.7%)\n  - Candidato: 'cuadrilla de 5' -> Coincidencias: 3/3 (100.0%)\n--- FIN DEPURACIÓN DETALLADA ---\n  🏆 Mejor candidato encontrado: 'CUADRILLA DE 5' con un 100.0% de coincidencia.\n  ✅ Éxito: Coincidencia estricta encontrada.\n💰 Costo/día: $250,000.00\n\n📍 Paso B: Rendimiento y Costo de Equipo\n----------------------------------------\n--- INICIO DEPURACIÓN DETALLADA DE BÚSQUEDA ---\nBuscando con keywords: ['cubierta']\n  - Modo: FLEXIBLE (umbral: 30.0%)\n  - APUs en pool: 11\n  - Primeras 5 descripciones en el pool:\n    - REMATE CON PINTURA DE FABRICA CAL 22 DE 120 CMTS CURVO\n    - ACABADOS FINALES\n    - INSTALACION TEJA SENCILLA CUBIERTA\n    - INGENIERO RESIDENTE\n    - CUADRILLA DE 4\n  - Candidato: 'instalacion teja sencilla cubierta' -> Coincidencias: 1/1 (100.0%)\n--- FIN DEPURACIÓN DETALLADA ---\n  🏆 Mejor candidato encontrado: 'INSTALACION TEJA SENCILLA CUBIERTA' con un 100.0% de coincidencia.\n  ✅ Éxito: Supera el umbral flexible de 30.0%.\n\n📦 APU Tarea: 1,3\n⏱️ Tiempo total MO: 0.1250\n📊 Rendimiento: 8.00 un/día\n🔧 Costo Equipo: $0.00/un\n\n📍 Paso C: Cálculo Final\n----------------------------------------\n💵 Costo MO/un = $250,000.00 / 8.00 = $31,250.00\n🔨 Instalación = $31,250.00 + $0.00 = $31,250.00\n\n============================================================\n📊 RESULTADO FINAL\n============================================================\n💰 Suministro:    $0.00\n🔨 Instalación:   $31,250.00\n────────────────────────────────────────\n💵 TOTAL:         $31,250.00"

tests/test_estimator.py:109: AssertionError
=============================================================== short test summary info ================================================================
FAILED tests/test_estimator.py::TestEstimator::test_calculate_estimate_flexible_search - AssertionError: 'Mejor coincidencia FLEXIBLE' not found in "📝 Parámetros de entrada: {'material': 'CUBIERTA', 'cuadrilla': '5'}\n🔄 Material mapeado: 'CUBIERTA' → 'CUBIERTA'\n\n============================================================\n🔍 BÚSQUEDA DE SUMINISTRO\n============================================================\n  --> Pool vacío o sin keywords, retornando None.\n\n⚠️ No se encontró APU de suministro.\n\n============================================================\n🔧 CÁLCULO DE INSTALACIÓN\n============================================================\n\n📍 Paso A: Costo Diario de Cuadrilla\n----------------------------------------\n--- INICIO DEPURACIÓN DETALLADA DE BÚSQUEDA ---\nBuscando con keywords: ['cuadrilla', 'de', '5']\n  - Modo: ESTRICTO\n  - APUs en pool: 2\n  - Primeras 5 descripciones en el pool:\n    - CUADRILLA DE 4\n    - CUADRILLA DE 5\n  - Candidato: 'cuadrilla de 4' -> Coincidencias: 2/3 (66.7%)\n  - Candidato: 'cuadrilla de 5' -> Coincidencias: 3/3 (100.0%)\n--- FIN DEPURACIÓN DETALLADA ---\n  🏆 Mejor candidato encontrado: 'CUADRILLA DE 5' con un 100.0% de coincidencia.\n  ✅ Éxito: Coincidencia estricta encontrada.\n💰 Costo/día: $250,000.00\n\n📍 Paso B: Rendimiento y Costo de Equipo\n----------------------------------------\n--- INICIO DEPURACIÓN DETALLADA DE BÚSQUEDA ---\nBuscando con keywords: ['cubierta']\n  - Modo: FLEXIBLE (umbral: 30.0%)\n  - APUs en pool: 11\n  - Primeras 5 descripciones en el pool:\n    - REMATE CON PINTURA DE FABRICA CAL 22 DE 120 CMTS CURVO\n    - ACABADOS FINALES\n    - INSTALACION TEJA SENCILLA CUBIERTA\n    - INGENIERO RESIDENTE\n    - CUADRILLA DE 4\n  - Candidato: 'instalacion teja sencilla cubierta' -> Coincidencias: 1/1 (100.0%)\n--- FIN DEPURACIÓN DETALLADA ---\n  🏆 Mejor candidato encontrado: 'INSTALACION TEJA SENCILLA CUBIERTA' con un 100.0% de coincidencia.\n  ✅ Éxito: Supera el umbral flexible de 30.0%.\n\n📦 APU Tarea: 1,3\n⏱️ Tiempo total MO: 0.1250\n📊 Rendimiento: 8.00 un/día\n🔧 Costo Equipo: $0.00/un\n\n📍 Paso C: Cálculo Final\n----------------------------------------\n💵 Costo MO/un = $250,000.00 / 8.00 = $31,250.00\n🔨 Instalación = $31,250.00 + $0.00 = $31,250.00\n\n============================================================\n📊 RESULTADO FINAL\n============================================================\n💰 Suministro:    $0.00\n🔨 Instalación:   $31,250.00\n────────────────────────────────────────\n💵 TOTAL:         $31,250.00"
============================================================= 1 failed, 36 passed in 8.75s =============================================================