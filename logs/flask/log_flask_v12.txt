 * Serving Flask app 'app/app.py'
 * Debug mode: off
2025-09-16 09:55:59,308 - INFO - WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on http://127.0.0.1:5002
2025-09-16 09:55:59,309 - INFO - Press CTRL+C to quit
2025-09-16 09:56:03,929 - INFO - 127.0.0.1 - - [16/Sep/2025 09:56:03] "GET / HTTP/1.1" 200 -
2025-09-16 09:56:04,961 - INFO - 127.0.0.1 - - [16/Sep/2025 09:56:04] "GET /favicon.ico HTTP/1.1" 404 -
2025-09-16 09:56:15,742 - INFO - Cache miss.
2025-09-16 09:56:15,742 - INFO - Procesando archivos: /home/gerardo/Documentos/GitHub/apu_filter/uploads/e4d1b9e8-a6ef-4706-97a2-40062fc1f72a/presupuesto_1758034575_presupuesto.csv, /home/gerardo/Documentos/GitHub/apu_filter/uploads/e4d1b9e8-a6ef-4706-97a2-40062fc1f72a/apus_1758034575_apus.csv, /home/gerardo/Documentos/GitHub/apu_filter/uploads/e4d1b9e8-a6ef-4706-97a2-40062fc1f72a/insumos_1758034575_insumos.csv
2025-09-16 09:56:15,755 - INFO - Éxito al leerpresupuesto_1758034575_presupuesto.csv con encoding 'latin1'y delimitador ';'
2025-09-16 09:56:15,787 - INFO - Tipos de datos optimizados con PyArrow para /home/gerardo/Documentos/GitHub/apu_filter/uploads/e4d1b9e8-a6ef-4706-97a2-40062fc1f72a/presupuesto_1758034575_presupuesto.csv
2025-09-16 09:56:16,318 - INFO - Diagnóstico: 77 de 77 ítems del presupuesto encontraron su costo.
2025-09-16 09:56:16,350 - INFO - --- Procesamiento completado ---
2025-09-16 09:56:16,430 - INFO - Cache info: hits=0, misses=1, size=1
2025-09-16 09:56:16,435 - INFO - 127.0.0.1 - - [16/Sep/2025 09:56:16] "POST /upload HTTP/1.1" 200 -
/home/gerardo/Documentos/GitHub/apu_filter/app/procesador_csv.py:735: UserWarning: This pattern is interpreted as a regular expression, and has match groups. To actually get the groups, use str.extract.
  df_apus_unique["DESC_NORMALIZED"].str.contains(suministro_search_terms, regex=True)
/home/gerardo/Documentos/GitHub/apu_filter/app/procesador_csv.py:735: UserWarning: This pattern is interpreted as a regular expression, and has match groups. To actually get the groups, use str.extract.
  df_apus_unique["DESC_NORMALIZED"].str.contains(suministro_search_terms, regex=True)
2025-09-16 09:56:16,713 - INFO - 127.0.0.1 - - [16/Sep/2025 09:56:16] "POST /api/estimate HTTP/1.1" 404 -
2025-09-16 09:56:16,746 - INFO - 127.0.0.1 - - [16/Sep/2025 09:56:16] "POST /api/estimate HTTP/1.1" 404 -
2025-09-16 09:56:23,876 - INFO - 127.0.0.1 - - [16/Sep/2025 09:56:23] "GET /api/apu/11,1 HTTP/1.1" 404 -